name: Full deploy to DigitalOcean

on:
  workflow_dispatch:

env:
  PROJECT_NAME: rso-project
  REGISTRY_NAME: rso-registry

jobs:
  deploy:
    name: Deploy to prod
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@main

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Build web service image
        run: docker build -t registry.digitalocean.com/$REGISTRY_NAME/web:$(echo $GITHUB_SHA | head -c7) web

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Push image to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/$REGISTRY_NAME/web:$(echo $GITHUB_SHA | head -c7)

      - name: Update deployment file
        run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|registry.digitalocean.com/rso-registry/web|registry.digitalocean.com/rso-registry/web:'${TAG}'|' $GITHUB_WORKSPACE/k8s/deployment.yaml

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 rso-k8s-cluster

      - name: Apply Deployment to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/k8s/deployment.yaml

      - name: Apply Ingress to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/k8s/ingress.yaml

      - name: Apply Service to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/k8s/service.yaml

      - name: Apply Issuer to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/k8s/production_issuer.yaml

      - name: Verify deployment
        run: kubectl rollout status deployment
